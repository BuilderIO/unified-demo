/**
 * This code was generated by Builder.io.
 */
import React from 'react';

interface SizeFilterProps {
  selectedSizes: string[];
  setSelectedSizes: React.Dispatch<React.SetStateAction<string[]>>;
}

const sizes = Array.from({ length: 18 }, (_, i) => i.toString());
const sizeLabels = ['X SMALL', 'SMALL', 'MEDIUM', 'LARGE', 'X LARGE', 'XX LARGE'];

export const SizeFilter: React.FC<SizeFilterProps> = ({
  selectedSizes,
  setSelectedSizes,
}) => {
  const handleSizeChange = (size: string) => {
    setSelectedSizes((prev) =>
      prev.includes(size)
        ? prev.filter((s) => s !== size)
        : [...prev, size]
    );
  };

  return (
    <>
      <div className="flex flex-row flex-wrap gap-2.5 px-px mt-4 whitespace-nowrap justify-center">
        {sizes.map((size) => (
          <div
            key={size}
            className={`text-center p-2.5 bg-neutral-100 h-[50px] w-[50px] cursor-pointer leading-8 ${
              selectedSizes.includes(size) ? 'bg-blue-500 font-semibold shadow-md' : ''
            }`}
            onClick={() => handleSizeChange(size)}
          >
            {size}
          </div>
        ))}
      </div>
      <div className="box-border flex relative flex-row flex-wrap shrink-0 gap-2.5 justify-center items-center mt-2.5 text-xs">
        {sizeLabels.map((label) => (
          <div
            key={label}
            className={`justify-center p-2.5 text-center bg-neutral-100 cursor-pointer w-[31%] ${
              selectedSizes.includes(label) ? 'bg-blue-500 font-semibold shadow-md' : ''
            }`}
            onClick={() => handleSizeChange(label)}
          >
            {label}
          </div>
        ))}
      </div>
    </>
  );
};