"use client"
/**
 * This code was generated by Builder.io.
 */
import React, { useState, FC } from 'react';
import ProductCard from '@/components/Card/ProductCard';
import { CategoryFilter } from './CategoryFilter';
import { ColorFilter } from './ColorFilter';
import { SizeFilter } from './SizeFilter';
import { Pagination } from './Pagination';
import { RenderBuilderContent } from '../builder';
import { BuilderContent } from '@builder.io/react';
import { Accordion, AccordionItem, AccordionContent, AccordionTrigger } from '@/components/ui/accordion';

type CategoryLandingProps = {
  products: any;
  plpTiles: any;
}

const CategoryLanding: FC<CategoryLandingProps> = ({ products, plpTiles }) => {
  const [selectedCategories, setSelectedCategories] = useState<string[]>([]);
  const [selectedColors, setSelectedColors] = useState<string[]>([]);
  const [selectedSizes, setSelectedSizes] = useState<string[]>([]);

  return (
    <div className="box-border flex relative flex-col shrink-0">
      <div className="flex flex-col mt-9 w-full md:px-5 md:mt-10 md:max-w-full">
        <div className="md:max-w-full">
          <div className="flex gap-5 max-sm:flex-col md:gap-0">
            <div className="flex flex-col w-[31%] md:ml-0 max-sm:w-full">
              <div className="flex flex-col text-base tracking-wider text-black md:mt-10">
                <Accordion type="multiple" className="w-full" defaultValue={["category", "color", "size"]}>
                  <AccordionItem value="category">
                    <AccordionTrigger>Category
                    </AccordionTrigger>
                    <AccordionContent>
                      <CategoryFilter
                        selectedCategories={selectedCategories}
                        setSelectedCategories={setSelectedCategories}
                      />
                    </AccordionContent>
                  </AccordionItem>
                  <AccordionItem value="color">
                    <AccordionTrigger>Color
                    </AccordionTrigger>
                    <AccordionContent>
                      <ColorFilter
                        selectedColors={selectedColors}
                        setSelectedColors={setSelectedColors}
                      />
                    </AccordionContent>
                  </AccordionItem>
                  <AccordionItem value="size">
                    <AccordionTrigger>Size
                    </AccordionTrigger>
                    <AccordionContent>
                      <SizeFilter
                        selectedSizes={selectedSizes}
                        setSelectedSizes={setSelectedSizes}
                      />
                    </AccordionContent>
                  </AccordionItem>
                </Accordion>
              </div>
            </div>
            <div className="flex flex-col ml-5 w-[69%] md:ml-0 max-sm:w-full">
              <div className="flex flex-col grow md:mt-10 md:max-w-full">
                <div className="flex flex-row flex-wrap gap-1.5 justify-start items-center md:max-w-full">
                  {products.map((product:BuilderContent, index:any) => {
                    return (
                      <>
                        <ProductCard
                          key={index}
                          classes="box-border relative shrink-0 lg:w-[30%] sm:w-[45%] w-full"
                          product={product}
                        />
                        {index === 3 && plpTiles.length &&
                          <div
                            key={`${index}-ad-tile`}
                            className="flex flex-col text-base tracking-wider text-center m-2 box-border relative shrink-0 lg:w-[30%] sm:w-[45%] w-full" >
                            <RenderBuilderContent model="plp-tile" content={plpTiles[0]} />
                          </div>
                        }
                      </>
                    )
                  })}
                </div>
              </div>
            </div>
          </div>
        </div>
        <Pagination />
      </div>
    </div>
  );
};

export default CategoryLanding;